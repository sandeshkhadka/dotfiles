#!/usr/bin/env python3
import os
import subprocess
import re
SANE_VALUE=32
# Function to get a short readable microphone name
def get_mic_name():
    try:
        mic_long_name = subprocess.check_output(
            ["pactl", "get-default-source"], text=True
        ).strip()

        # Map known mic names to short versions
        name_mappings = {
            "alsa_input.pci": "BuiltIn",
            "alsa_input.usb": "USBMic",
            "bluez_source": "BTMic",
            "analog-stereo": "Analog",
            "usb": "USB",
            "headset": "Headset",
            "default": "Default",
        }

        for key, short_name in name_mappings.items():
            if key in mic_long_name:
                return short_name[:7]  # Ensure max length is 6 chars

        return mic_long_name[:7]  # Fallback: use first 6 chars
    except Exception:
        return "Mic"

# Function to get current microphone volume
def get_mic_volume():
    try:
        output = subprocess.check_output(
            ["pactl", "get-source-volume", "@DEFAULT_SOURCE@"],
            text=True
        )
        match = re.search(r'(\d+)%', output)
        if match:
            return match.group(1) + "%"
    except Exception:
        return "N/A"
    return "N/A"

# Handle left-click to set input volume to 32%
block_button = os.getenv("BLOCK_BUTTON")
if block_button == "1":
    subprocess.run(["pactl", "set-source-volume", "@DEFAULT_SOURCE@", f"{SANE_VALUE}%"])

# Get microphone name and volume
mic_name = get_mic_name()
mic_volume = get_mic_volume()

# Print the microphone info
print(f"{mic_volume}[{mic_name}]")

