#!/bin/bash

# Define color codes
RED='\033[31m'
GREEN='\033[32m'
YELLOW='\033[33m'
BLUE='\033[34m'
RESET='\033[0m'

# Read from stdin (pipe) or from the file passed as argument
if [ -t 0 ]; then
    # If there's no pipe (input from a file)
    while IFS= read -r line; do
        # Apply colors based on log level
        if [[ "$line" == "[ERROR]"* ]]; then
            echo -e "${RED}$line${RESET}"
        elif [[ "$line" == "[INFO]"* ]]; then
            echo -e "${GREEN}$line${RESET}"
        elif [[ "$line" == "[WARNING]"* ]]; then
            echo -e "${YELLOW}$line${RESET}"
        elif [[ "$line" == "[FATAL]"* ]]; then
            echo -e "${RED}$line${RESET}"
        else
            echo "$line"  # No color for lines that don't match log levels
        fi
    done < "$1"  # Read from the provided file
else
    # If input is piped
    while IFS= read -r line; do
        # Apply colors based on log level
        if [[ "$line" == "[ERROR]"* ]]; then
            echo -e "${RED}$line${RESET}"
        elif [[ "$line" == "[INFO]"* ]]; then
            echo -e "${GREEN}$line${RESET}"
        elif [[ "$line" == "[WARNING]"* ]]; then
            echo -e "${YELLOW}$line${RESET}"
        elif [[ "$line" == "[FATAL]"* ]]; then
            echo -e "${RED}$line${RESET}"
        else
            echo "$line"  # No color for lines that don't match log levels
        fi
    done  # Read from stdin (piped input)
fi

